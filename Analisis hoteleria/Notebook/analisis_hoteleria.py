# -*- coding: utf-8 -*-
"""Analisis hoteleria.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1w6TaM0dLr7uVoCI-ZoDzHVdR9TR9ohFi

Conjunto de datos obtenidos de https://www.kaggle.com/datasets/datacertlaboratoria/proyecto-4-anlisis-de-cancelaciones-hoteleras

Nuestro objetivo es hacer un Análisis de Cancelaciones Hoteleras
"""

#Impotamos datos
import pandas as pd
df=pd.read_csv('/content/hotel_bookings.csv')

#Exploremos nuestro df
print(df.head(20))
#Tamaño del df
print('')
print(df.shape)
#Cantidad de nulos por columna
print('Cantidad de nulos por columna')
print('')
print(df.isnull().sum())

#Veamos que tipo de datos tenemos por columna
print(df.dtypes)

df.dropna(subset=['children'], inplace=True)

"""Cambiemos el tipo de dato de los que tienen como tipo de dato 'object' por el correspondiente"""

columnas_a_string = [
    'hotel', 'arrival_date_month', 'meal', 'country', 'market_segment',
    'distribution_channel', 'reserved_room_type', 'assigned_room_type',
    'customer_type', 'reservation_status'
]

for col in columnas_a_string:
    df[col] = df[col].astype('string')

df['reservation_status_date'] = pd.to_datetime(df['reservation_status_date'])
#Verifiquemos que todo esta bien
print(df.dtypes)

#Pasemos al español el nombre de las columnas
df = df.rename(columns={
    'hotel': 'hotel',
    'is_canceled': 'fue_cancelado',
    'lead_time': 'dias_anticipacion_reserva',
    'arrival_date_year': 'anio_llegada',
    'arrival_date_month': 'mes_llegada',
    'arrival_date_week_number': 'semana_llegada',
    'arrival_date_day_of_month': 'dia_llegada',
    'stays_in_weekend_nights': 'noches_fin_de_semana',
    'stays_in_week_nights': 'noches_dias_semana',
    'adults': 'adultos',
    'children': 'ninos',
    'babies': 'bebes',
    'meal': 'tipo_comida',
    'country': 'pais',
    'market_segment': 'segmento_mercado',
    'distribution_channel': 'canal_distribucion',
    'is_repeated_guest': 'es_cliente_recurrente',
    'previous_cancellations': 'cancelaciones_previas',
    'previous_bookings_not_canceled': 'reservas_previas_no_canceladas',
    'reserved_room_type': 'tipo_habitacion_reservada',
    'assigned_room_type': 'tipo_habitacion_asignada',
    'booking_changes': 'cambios_reserva',
    'agent': 'agente',
    'company': 'empresa',
    'days_in_waiting_list': 'dias_lista_espera',
    'customer_type': 'tipo_cliente',
    'adr': 'tarifa_diaria_promedio',
    'required_car_parking_spaces': 'espacios_estacionamiento_requeridos',
    'total_of_special_requests': 'total_pedidos_especiales',
    'reservation_status': 'estado_reserva',
    'reservation_status_date': 'fecha_estado_reserva'
})

"""Tendriamos que ver que cosas nos interesan, para descartar las columnas que no nos interesan.
Empecemos por ver la cantidad de nulos y como los gestionamos.
"""

#Cantidad de nulos por columna
print('Cantidad de nulos por columna')
print('')
print(df.isnull().sum())

df.dropna(subset=['ninos'])

#Cantidad de nulos por columna
print('Cantidad de nulos por columna')
print('')
print(df.isnull().sum())

"""Observamos que faltan datos pais, agente y empresa. Al leer la informacion del dataset en la web notamos que el agente tiene la informacion de si el cliente hizo un deposito al reservar, lo cual es relevante para nuestro analisis. Con respecto  a la columna empresa, esta tiene informacion del dni de la empresa que lo reservo. Al notar que faltan muchos datos en esta columna opto por eliminar dicha columna."""

#df.drop('empresa',axis=1)

"""Nuestras hipotesis son:

Las reservas que se hacen con mayor anticipación tienen mucho riesgo de cancelarse.

Las reservas que incluyen hijos tienen menor riesgo.

Los usuarios que realizaron algún cambio en su reserva tienen menor riesgo.

Cuando el usuario ha realizado una solicitud especial el riesgo es menor.

Las reservas que tienen un “adr” bajo el riesgo es menor.

Por el momento vamos a definir nuestras columnas utiles para trabajar mas comodamente, segun las hipotesis ya dadas.
"""

columnas_utiles = [
    'fue_cancelado',
    'dias_anticipacion_reserva',
    'ninos',
    'bebes',
    'cambios_reserva',
    'total_pedidos_especiales',
    'tarifa_diaria_promedio'
]
df_analisis = df[columnas_utiles].copy()
df_analisis.head()
print(df_analisis.dtypes)

"""Guardemos el dataframe limpio"""

df_analisis.to_csv("datos_analisis_hotel.csv", index=False)
#Descaguemos el dataframe
from google.colab import files
files.download("datos_analisis_hotel.csv")